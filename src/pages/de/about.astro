---
import Carousel from "@/components/Carousel.astro";
import Layout from "@/layouts/Layout.astro";
import SEO from "@/components/SEO.astro";
import { useTranslations, getLangFromUrl } from "@/i18n/utils";
import Image from "astro/components/Image.astro";
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const importProjectsModule = import.meta.glob("@/data/*/projects.json")[
  `/src/data/${lang}/projects.json`
];
let Projects = [];
if (importProjectsModule) Projects = (await importProjectsModule()).default;
else
  console.warn(
    `Could not find projects module importer for key: ${`/src/data/${lang}/projects.json`}`
  );

const importServicesModule = import.meta.glob("@/data/*/services.json")[
  `/src/data/${lang}/services.json`
];
let Services = [];
if (importServicesModule) Services = (await importServicesModule()).default;
else
  console.warn(
    `Could not find projects module importer for key: ${`/src/data/${lang}/services.json`}`
  );
---

<slot name="head">
  <SEO pageName="about" />
</slot>
<style>
  .container_mouse {
    position: absolute;
    width: 100vw;
    height: 100vh;
    top: 0;
    left: 0;
    z-index: 10;
    text-align: center;
    color: black;
    font-weight: bold;
    text-transform: uppercase;
    padding-top: 100%;
    cursor: pointer;
  }

  .container_mouse .mouse-btn {
    margin: 10px auto;
    width: 40px;
    height: 80px;
    border: 4px solid black;
    border-radius: 30px;
    display: flex;
  }

  .container_mouse .mouse-btn .mouse-scroll {
    display: block;
    width: 20px;
    height: 20px;
    background: linear-gradient(170deg, rgb(0, 0, 0), rgb(0, 0, 0));
    border-radius: 50%;
    margin: auto;
    animation: scrolling 1s linear infinite;
  }

  @keyframes scrolling {
    0% {
      opacity: 0;
      transform: translateY(-20px);
    }

    100% {
      opacity: 1;
      transform: translateY(20px);
    }
  }
</style>
<Layout>
  <div class="about-page-scroll-start"></div>
  <!-- <img src="/images/kabeer-and-ossaid-ai.webp" class="w-screen h-auto block lg:hidden" />
  <div
    data-speed="clamp(0.8)"
    class="hidden lg:block container-px-4-mx-auto z-10 lg:max-h-[100vh] about-page-main-cover-image w-full lg:bg-fixed bg-black"
    style="mix-blend-mode: difference; will-change: transform; background-position: center; background-repeat: no-repeat; background-size: cover; background-image: url('/images/kabeer-and-ossaid-ai-landscape.webp');">
    <img src="/images/kabeer-and-ossaid-ai-landscape.webp" class="w-full h-full opacity-0" />
  </div> -->
  <div class="w-full max-w-screen relative bg-amber-500 text-black overflow-hidden">
    <div
      class="relative lg:mx-auto lg:container px-4 -lg:px-0 mt-[-1rem] flex flex-col lg:flex-row rounded-t-lg">
      <div class="flex flex-col lg:flex-row items-center py-32 w-full" data-speed="clamp(0.95)">
        <div class="relative flex flex-col lg:flex-row justify-between items-center w-full">
          <p class="text-left max-w-5xl z-0">
            {t("about.about-otherdev")}
          </p>
          <div
            class="hidden lg:block w-full"
            style="mix-blend-mode: difference; will-change: transform;">
            <img  inferSize={true}
              src="/shapes/Party.svg"
              class="spikey-boy-clickable cursor-pointer saturate-0 brightness-0 hover:scale-125 duration-200 ml-auto"
              alt="Decorative shape"
            />
          </div>
        </div>
      </div>
      <div
        class="spikey-boy z-[-1] left-auto ml-auto absolute float-end top-[-6rem]"
        style=" will-change: transform; mix-blend-mode: difference;">
        <img src="/shapes/Party.svg" alt="Decorative shape" />
      </div>
    </div>

    <hr class="border-black" />

    <div class="lg:mx-auto lg:container px-4 -lg:px-0">
      <h4 class="absolute text-[15vw] font-serif">
        {t("about.projects")}
      </h4>
    </div>

    <div class="mt-[15vw]" data-speed="clamp(0.9)">
      <Carousel carouselId="about-page" images={Projects.map((item) => item.imageSrc)} />
    </div>
    <div class="mt-[4rem] w-full max-w-screen relative text-black overflow-hidden">
      <div
        class="relative lg:mx-auto lg:container px-4 -lg:px-0 mt-[-1rem] flex flex-col lg:flex-row rounded-t-lg">
        <div class="flex flex-col lg:flex-row items-center py-32 w-full" data-speed="clamp(0.95)">
          <div class="relative flex flex-col lg:flex-row justify-between items-center w-full">
            <p
              class="text-left max-w-5xl z-0"
              set:html={t("about.second-paragraph")}
            />
          </div>
        </div>
      </div>
      <!-- <div
        class="grid grid-cols-1 lg:grid-cols-2 -upper-image-slideshow-container gap-2 lg:mx-auto lg:container px-4 -lg:px-0 pb-[4rem]">
        {
          [].map((item) => (
            <img
              class="object-cover w-full h-full upper-slideshow-image"
              style="offset-anchor: right;"
              src={item}
            />
          ))
        }
      </div> -->
    </div>
  </div>
</Layout>

<div class="about-page-scroll-end"></div>

<script>
  // Rotate element on click
  document.querySelector(".spikey-boy-clickable")?.addEventListener("click", () => {
    gsap.to(".spikey-boy-clickable", { rotate: "+=360", duration: 1 });
  });
  // gsap.to(".upper-slideshow-image", {
  //   x: 0,
  //   opacity: 1,
  //   scrollTrigger: {
  //     once: false,
  //     trigger: ".upper-image-slideshow-container",
  //     start: "top 20%", // When the top of the trigger hits 80% of the viewport
  //     end: "bottom 10%", // When the bottom of the trigger hits 20% of the viewport
  //     scrub: true, // Smoothly link animation progress to scroll
  //     markers: false, // For debugging - shows start and end lines
  //   },
  // });
</script>
