<script is:inline src="/js/gsap/gsap.js"></script>
<script is:inline defer src="/js/gsap/ScrollSmoother.js"></script>
<script is:inline defer src="https://cdn.jsdelivr.net/npm/gsap@3.12.7/dist/TextPlugin.min.js"
></script>
<script is:inline defer src="https://cdn.jsdelivr.net/npm/gsap@3.12.7/dist/ScrollTrigger.min.js"
></script>

<div class="cursor-example hidden lg:block"></div>
<script is:inline>
  window.addEventListener("load", () => {
    // Register GSAP plugins once on load
    gsap.config({ trialWarn: false });
    gsap.registerPlugin(TextPlugin, ScrollTrigger, ScrollSmoother);

    // Initialize ScrollSmoother with settings
    ScrollSmoother.create({
      trialWarn: false,
      smooth: 1,
      effects: true,
    });

    // Curtain animation on page load
    gsap.to(".load-curtain", {
      opacity: 0,
      duration: 0.3,
      delay: 0.2,
    });

    // Optimize click event listener for page transitions
    document.addEventListener("click", (e) => {
      const link = e.target.closest("a");
      if (link) {
        if (link.target === "_blank") {
          window.open(link.href, "_blank");
        } else {
          e.preventDefault();
          gsap.to(".load-curtain", {
            opacity: 1,
            duration: 0.3,
            onComplete: () => {
              window.location.href = link.href;
            },
          });
        }
      }
    });

    // Detect if the device is a touch device (optimized)
    const isTouchDevice =
      "ontouchstart" in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;

    // Cursor animation for non-touch devices
    if (!isTouchDevice) {
      let posX = 0,
        posY = 0;
      let mouseX = 0,
        mouseY = 0;

      // Use requestAnimationFrame for smoother, performant updates
      const updateCursor = () => {
        posX += (mouseX - posX) / 8;
        posY += (mouseY - posY) / 8;
        gsap.set(".cursor-example", {
          left: posX - 1,
          top: posY - 2,
        });
        requestAnimationFrame(updateCursor); // Continuously update the cursor
      };

      document.addEventListener("mousemove", (e) => {
        mouseX = e.clientX;
        mouseY = e.clientY;
      });

      // Start cursor animation
      updateCursor();
      let transitioning = false;
      const cursor = document.querySelector(".cursor-example");
      // Simplified click effect on cursor with GSAP
      window.addEventListener("click", () => {
        if (transitioning) return;
        transitioning = true;
        const initialScale = cursor.style.transform;
        gsap.to(cursor, {
          scale: 3,
          duration: 0.25,
          onComplete: () => {
            cursor.style.transform = initialScale;
            transitioning = false;
          },
        });
      });
    }
  });
</script>

<style>
  .cursor-example {
    position: fixed;
    top: 0;
    left: 0;
    transition-duration: 0.3s;
    width: 25px;
    height: 25px;
    border-radius: 100%;
    background-color: white;
    pointer-events: none;
  }
</style>
