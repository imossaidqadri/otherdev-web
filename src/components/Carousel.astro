---
const { images, carouselId: id, imageClasses } = Astro.props;
---

<div class="relative w-full">
  <div
    data-carousel-id={id}
    class="group h-full whitespace-nowrap overflow-x-scroll scrollbar-hide snap-x snap-mandatory"
    style="scroll-behavior: smooth;">
    <div class="flex gap-2 h-full items-center">
      {
        images.map(
          (image, index) =>
            image && (
                <img
                  src={image}
                  alt="Gallery image"
                  class={`snap-always snap-center ${imageClasses} `}
                  style="max-height: 80vh; max-width: 80vw;"
                />
            )
        )
      }
    </div>
  </div>

  <!-- Navigation controls (Fixed to prevent scrolling away) -->
  <div class="absolute inset-y-0 w-full lg:flex justify-between pointer-events-none hidden">
    <button
      data-carousel-left={id}
      class="absolute left-0 top-0 bottom-0 w-1/2 cursor-arrow-left  text-white transition-opacity pointer-events-auto cursor-pointer"
      aria-label="Previous image"></button>
    <button
      data-carousel-right={id}
      class="absolute right-0 top-0 bottom-0 w-1/2 cursor-arrow-right text-white transition-opacity pointer-events-auto cursor-pointer"
      aria-label="Next image"></button>
  </div>
</div>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const id = document.querySelector("[data-carousel-id]").dataset.carouselId;
    const carousel = document.querySelector(`[data-carousel-id="${id}"]`);
    const left = document.querySelector(`[data-carousel-left="${id}"]`);
    const right = document.querySelector(`[data-carousel-right="${id}"]`);
    const cursorExample = document.querySelector(".cursor-example");

    if (!carousel || !left || !right) return;

    const scrollAmount = () => carousel.clientWidth * 0.8;

    left.addEventListener("click", () => {
      carousel.scrollBy({ left: -scrollAmount(), behavior: "smooth" });
    });

    right.addEventListener("click", () => {
      carousel.scrollBy({ left: scrollAmount(), behavior: "smooth" });
    });

    let initial;
    left.addEventListener("mouseover", () => {
      initial = cursorExample.style.scale;
      cursorExample.style.scale = 2;
    });
    left.addEventListener("mouseout", () => {
      cursorExample.style.scale = initial;
    });
    right.addEventListener("mouseover", () => {
      initial = cursorExample.style.scale;
      cursorExample.style.scale = 2;
    });
    right.addEventListener("mouseout", () => {
      cursorExample.style.scale = initial;
    });

    // Handle keyboard navigation
    carousel.addEventListener("keydown", (e) => {
      if (e.key === "ArrowLeft") left.click();
      if (e.key === "ArrowRight") right.click();
    });
  });
</script>

<style>
  /* Hide scrollbar while maintaining scrollability */
  .scrollbar-hide {
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  .scrollbar-hide::-webkit-scrollbar {
    display: none;
  }
</style>
