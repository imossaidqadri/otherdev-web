---
// src/components/PDFViewer.astro
const { src } = Astro.props;
---

<div class="relative overflow-hidden w-full " id="pdf-viewer-container">
  <!-- <div class="absolute top-4 right-4 z-10 flex gap-2">
    <button class="pdf-control bg-white p-2 rounded shadow" onclick="handleZoom(0.2)">+</button>
    <button class="pdf-control bg-white p-2 rounded shadow" onclick="handleZoom(-0.2)">-</button>
    <button class="pdf-control bg-white p-2 rounded shadow" onclick="resetZoom()">Reset</button>
  </div> -->
  <div
    id="pdf-canvas-container"
    data-src={src}
    class="transition-transform duration-300 origin-top-left"
    style="transform: scale(var(--scale, 1))">
  </div>
</div>

<script is:inline>
  let scale = 1;
  let currentPage = 1;
  let pdfInstance = null;

  async function initPDFViewer() {
    const container = document.getElementById("pdf-canvas-container");
    const loadingTask = pdfjsLib.getDocument(container.getAttribute("data-src"));

    try {
      pdfInstance = await loadingTask.promise;
      renderPages(pdfInstance);
    } catch (err) {
      console.error("PDF loading error:", err);
    }
  }

  async function renderPages(pdf) {
    const container = document.getElementById("pdf-canvas-container");
    container.innerHTML = "";

    for (let i = 1; i <= pdf.numPages; i++) {
      const page = await pdf.getPage(i);
      const viewport = page.getViewport({ scale: 1 });

      const canvas = document.createElement("canvas");
      const context = canvas.getContext("2d");
      canvas.height = viewport.height;
      canvas.width = viewport.width;

      await page.render({ canvasContext: context, viewport }).promise;

      const pageDiv = document.createElement("div");
      // pageDiv.className = "mb-4 shadow-lg";
      pageDiv.appendChild(canvas);
      container.appendChild(pageDiv);
    }
  }

  function handleZoom(amount) {
    scale = Math.max(0.5, Math.min(scale + amount, 3));
    document.getElementById("pdf-canvas-container").style.setProperty("--scale", scale);
  }

  function resetZoom() {
    scale = 1;
    document.getElementById("pdf-canvas-container").style.setProperty("--scale", scale);
  }

  // Initialize after DOM load
  window.addEventListener("load", () => {
    pdfjsLib.GlobalWorkerOptions.workerSrc =
      "https://unpkg.com/pdfjs-dist@3.4.120/build/pdf.worker.min.js";
    initPDFViewer();
  });
</script>

<style is:global>
  @import url("https://cdnjs.cloudflare.com/ajax/libs/tailwindcss/2.2.19/tailwind.min.css");

  #pdf-canvas-container {
    min-width: max-content;
    min-height: max-content;
  }

  .pdf-control {
    transition: all 0.2s ease;
  }

  .pdf-control:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  }
</style>

<script is:inline src="https://unpkg.com/pdfjs-dist@3.4.120/build/pdf.min.js"></script>
